/*
 * Generated by can_configuration.py. Do not manually edit this file.
 */

#ifndef LHRE_SHARED_CAN_DEFS_H_
#define LHRE_SHARED_CAN_DEFS_H_

#include <stdint.h>

#define CAN_BITRATE (500000)

#define CAN_PRIORITY_LEVEL_TIME_CRITICAL (0)
#define CAN_PRIORITY_LEVEL_HIGH (1)
#define CAN_PRIORITY_LEVEL_NORMAL (2)
#define CAN_PRIORITY_LEVEL_LOW (3)
#define CAN_PRIORITY_LEVEL_DEBUG (4)

#define CAN_MAX_PRIORITY_LEVEL (4)
#define CAN_NUM_PRIORITY_LEVELS (5)

#define CAN_NODE_ID_BMS (0)
#define CAN_NODE_ID_INVERTER (1)

// Messages from node (0): BMS
#define CAN_ID_IMD_status (0x69)
#define CAN_PERIOD_IMD_status (0)
typedef struct __attribute__((__packed__)) {
	uint32_t frequency;
} CAN_MSG_IMD_status_T;


#define CAN_ID_GPIO (0x1234)
#define CAN_PERIOD_GPIO (0)
typedef struct __attribute__((__packed__)) {
	union bitfield {
		struct __attribute__((__packed__)) {
			unsigned int bms_fault:1;
			unsigned int bms_fault_latch:1;
			unsigned int HS_closed:1;
			unsigned int LS_closed:1;
			unsigned int shutdown_closed:1;
			unsigned int final_closed:1;
			unsigned int IMD_faulted:1;
			unsigned int IMD_fault_latched:1;
		};
		uint8_t AS_UINT;
	} bitfield;
} CAN_MSG_GPIO_T;


#define CAN_ID_BMS_analog_in (0x2000000)
#define CAN_PERIOD_BMS_analog_in (0)
typedef struct __attribute__((__packed__)) {
	uint16_t Vbat;
	uint16_t Vcar;
	uint16_t current_pos;
	uint16_t current_neg;
} CAN_MSG_BMS_analog_in_T;


// Messages from node (1): INVERTER
#define CAN_ID_placeholder (0x10000)
#define CAN_PERIOD_placeholder (0)
typedef struct __attribute__((__packed__)) {
	uint16_t fake;
} CAN_MSG_placeholder_T;



#endif /* LHRE_SHARED_CAN_DEFS_H_ */
